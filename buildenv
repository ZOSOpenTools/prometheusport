# Update bump details accordingly. Use bump check to confirm.
# bump: prometheus-version /PROMETHEUS_VERSION="(.*)"/ https://github.com/prometheus/prometheus/releases/download/v2.45.5/prometheus-2.45.5.linux-s390x.tar.gz|semver:*
PROMETHEUS_VERSION="2.45.5" # Specify a stable release
export ZOPEN_STABLE_TAG="v${PROMETHEUS_VERSION}"
export ZOPEN_STABLE_URL="https://github.com/prometheus/prometheus.git"
export ZOPEN_STABLE_DEPS="make grep git comp_clang comp_go"
export ZOPEN_DEV_URL="https://github.com/prometheus/prometheus.git"
export ZOPEN_DEV_DEPS="make grep wharf git comp_clang comp_go findutils tar bzip2 gizp"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_RUNTIME_DEPS="bash"
export ZOPEN_CATEGORIES="database devops graphics"
export ZOPEN_COMP="CLANG"

export ZOPEN_CONFIGURE="zopen_wharf"
export ZOPEN_MAKE="skip"
export ZOPEN_INSTALL="zopen_install"
export ZOPEN_CHECK="zopen_check"

zopen_init()
{
  export CGO_ENABLED=0
  # Go installs binaries, so create the bin dir as well
  export GOBIN=$ZOPEN_INSTALL_DIR/bin
  export PATH=$PATH:$GOROOT/go-build-zos/bin
  export _BPXK_AUTOCVT=ON
  export _CEE_RUNOPTS="$_CEE_RUNOPTS FILETAG(AUTOCVT,AUTOTAG) POSIX(ON)"
}

zopen_install()
{
  mkdir -p $ZOPEN_INSTALL_DIR/bin
  cd ..
  mkdir "$(pwd)/go/bin"
  OLD_GOBIN=$GOBIN
  export GOBIN="$(pwd)/go/bin"
  go install github.com/prometheus/promu@latest
  cd ./prometheus
  git apply --whitespace=nowarn ../patches/node_patch
  make build
  export GOBIN=$OLD_GOBIN
  mv prometheus $ZOPEN_INSTALL_DIR/bin/prometheus
  mv promtool $ZOPEN_INSTALL_DIR/bin/promtool
}

zopen_wharf()
{
  cd ..
  git apply ./patches/wharf_patch
  go work init ./prometheus
  go work use ./go_package_port/github.com/edsrzf/mmap-go
  go work use ./go_package_port/github.com/fsnotify/fsnotify
  go work edit -replace=golang.org/x/sys=golang.org/x/sys@v0.20.0
  cd ./prometheus
}


zopen_check()
{
  go test -v -json ./...
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
 
  total=$(grep -Eo "Action:Run" $chk)

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_clean()
{
  echo "here-at-clean $PWD"
  chmod -R 755 go
  rm -rf go* prometheus install log.STABLE wharf_port
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "1.0.0"
}
